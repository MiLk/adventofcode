#ip 4
addi 4 16 4 #  0 - ip = 16 / jmp to 17

# after initialization
# r1 = 10550400
# r2 = 10551287
seti 1 4 3  #  1 - r3 = 1
seti 1 3 5  #  2 - r5 = 1

# if r3 * r5 == r2; jmp to 7; else jmp to 8
mulr 3 5 1  #  3 - r1 = r3 * r5
eqrr 1 2 1  #  4 - r1 = 1 if r1 == r2
addr 1 4 4  #  5 - jmp to 7
addi 4 1 4  #  6 - jmp to 8

addr 3 0 0  #  7 - r0 += r3
addi 5 1 5  #  8 - r5 += 1

# if r5 > r2; jmp to 12; else jmp to 3
gtrr 5 2 1  #  9 - set r1 to 1 if r5 > r2
addr 4 1 4  # 10 - skip next if r5 > r2
seti 2 9 4  # 11 - ip = 4 / jmp to 5

addi 3 1 3  # 12 - r3 += 1

# if r3 > r2; exit else; jmp to 2
gtrr 3 2 1  # 13 - set r1 to 1 if r3 > r2
addr 1 4 4  # 14 - skip next if r3 > r2
seti 1 6 4  # 15 - ip = 1 / jmp to 2 if r3 <= r2
mulr 4 4 4  # 16 - r4 = r4 * r4 > exit

# Initialization sequence
addi 2 2 2  # 17
mulr 2 2 2  # 18
mulr 4 2 2  # 19
muli 2 11 2 # 20
addi 1 2 1  # 21
mulr 1 4 1  # 22
addi 1 7 1  # 23
addr 2 1 2  # 24
addr 4 0 4  # 25
seti 0 8 4  # 26
setr 4 3 1  # 27
mulr 1 4 1  # 28
addr 4 1 1  # 29
mulr 4 1 1  # 30
muli 1 14 1 # 31
mulr 1 4 1  # 32
addr 2 1 2  # 33
seti 0 3 0  # 34
seti 0 6 4  # 35 - jmp to 1
